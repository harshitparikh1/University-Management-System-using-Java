
package userinterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Restaurant.Restaurant;
import Business.Restaurant.RestaurantDirectory;
import Business.Role.AdminRole;
import Business.Server.ServerDirectory;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Collections;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Talre
 */
public class CreateRestaurantJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem ecoSystem;
    private RestaurantDirectory restaurantDirectory;
    private ServerDirectory serverDirectory;
    /**
     * Creates new form CreateRetaurantJPanel
     */
    public CreateRestaurantJPanel(JPanel userProcessContainer, EcoSystem ecoSystem, RestaurantDirectory restaurantDirectory, ServerDirectory serverDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecoSystem = ecoSystem;
        this.restaurantDirectory = ecoSystem.getRestaurantDirectory();
        this.serverDirectory = ecoSystem.getServerDirectory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtRestaurantName = new javax.swing.JTextField();
        numOfTables = new javax.swing.JLabel();
        txtNumOfTables = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtPhoneNumber = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        checkboxDineInAvailable = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setBackground(new java.awt.Color(255, 255, 255));
        btnBack.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnBack.setText("<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 21, 98, 37));

        jLabel1.setBackground(new java.awt.Color(0, 102, 102));
        jLabel1.setFont(new java.awt.Font("Optima", 1, 36)); // NOI18N
        jLabel1.setText("Add Restaurant");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(321, 38, -1, -1));

        jLabel2.setFont(new java.awt.Font("Optima", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Restaurant Name*:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(247, 122, 158, -1));
        add(txtRestaurantName, new org.netbeans.lib.awtextra.AbsoluteConstraints(423, 121, 165, -1));

        numOfTables.setFont(new java.awt.Font("Optima", 1, 14)); // NOI18N
        numOfTables.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        numOfTables.setText("Number of tables");
        add(numOfTables, new org.netbeans.lib.awtextra.AbsoluteConstraints(284, 247, 121, -1));
        add(txtNumOfTables, new org.netbeans.lib.awtextra.AbsoluteConstraints(423, 246, 165, -1));

        jLabel7.setFont(new java.awt.Font("Optima", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Phone Number*:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 309, -1, 20));
        add(txtPhoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(423, 309, 165, -1));

        jLabel3.setFont(new java.awt.Font("Optima", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Address*:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(284, 187, 121, -1));
        add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(423, 184, 165, -1));

        btnCreate.setBackground(new java.awt.Color(255, 255, 255));
        btnCreate.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnCreate.setText("Submit");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        add(btnCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(389, 574, 170, 64));

        jLabel8.setFont(new java.awt.Font("Optima", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Username*:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(327, 363, -1, -1));
        add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(423, 362, 165, -1));

        jLabel9.setFont(new java.awt.Font("Optima", 1, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Password*:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(319, 444, 86, -1));
        add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(423, 441, 165, -1));

        jLabel10.setFont(new java.awt.Font("Optima", 2, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("*Mandatory fields");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 527, 136, -1));

        jLabel11.setFont(new java.awt.Font("Optima", 1, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Is Dine-in Available?");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 502, -1, -1));

        checkboxDineInAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxDineInAvailableActionPerformed(evt);
            }
        });
        add(checkboxDineInAvailable, new org.netbeans.lib.awtextra.AbsoluteConstraints(423, 502, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/AddRestaurant.png"))); // NOI18N
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(641, 198, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ManageRestaurantJPanel mrjp = (ManageRestaurantJPanel) component;
        mrjp.refreshTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        if(txtRestaurantName.getText().isEmpty() || txtAddress.getText().isEmpty() || txtPhoneNumber.getText().isEmpty() || 
                txtUsername.getText().isEmpty() || txtPassword.getText().isEmpty() || txtNumOfTables.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Fields cannot be left empty");
            return;
        }

        String restaurantName = txtRestaurantName.getText();
        
        boolean flag ;

        flag = restaurantName.matches("^[a-zA-Z0-9 ,.'-]+$");

        if(flag == false) {
            JOptionPane.showMessageDialog(null, "Invalid Resturant name. Name can only contain alphabets, numbers and some special characters (,'-). )");
            return;
        }


        String phoneNumber = txtPhoneNumber.getText();

        if(phoneNumber.length() != 10) {
            JOptionPane.showMessageDialog(null, "Phone Number must be of 10 digits");
            return;
        }
        flag = phoneNumber.matches("^[0-9]+$");
        if(!flag) {
            JOptionPane.showMessageDialog(null, "Phone Number must have 0-9 digits only");
            return;
        }
        
        for(Restaurant restaurant : restaurantDirectory.getRestaurantDirectory()) {
            if(restaurant.getPhoneNumber().equals(phoneNumber)) {
                JOptionPane.showMessageDialog(null, "Phone Number already exists.");
                return;
            }
        }


        String address = txtAddress.getText();
        String userName = txtUsername.getText();
        String password = txtPassword.getText();
        int numberOfTables = Integer.parseInt(txtNumOfTables.getText());
        boolean isDineInAvailable;
        
        if(checkboxDineInAvailable.isSelected()){
                isDineInAvailable = true;
            }
            else{
                isDineInAvailable = false;
            }

        for(UserAccount account : ecoSystem.getUserAccountDirectory().getUserAccountList()) {
            if(account.getUsername().equals(userName)) {
                JOptionPane.showMessageDialog(null, "Username Already exists");
                return;
            }
        }

        //Restaurant restaurant = restaurantDirectory.newRestaurant(restaurantName, address, managerName, phoneNumber);
        //System.out.println(restaurant.getRestaurantName() + " + ");
        System.out.println("Eco" + ecoSystem.getRestaurantDirectory().getRestaurantDirectory().size());
        ecoSystem.getRestaurantDirectory().newRestaurant(restaurantName, userName, address, isDineInAvailable, numberOfTables, phoneNumber, new HashMap<String, Integer>());
        
        
        if(isDineInAvailable){
        for(int i=0;i<numberOfTables;i++){
            String number = ""+(i+1);
            ecoSystem.getRestaurantTableDirectory().addTable(number, true, restaurantName, 4);
        }
        }
        
        Employee employee = ecoSystem.getEmployeeDirectory().createEmployee(restaurantName);
        UserAccount userAccount = ecoSystem.getUserAccountDirectory().createUserAccount(userName, password, employee, new AdminRole());

        JOptionPane.showMessageDialog(null, "New resturant added successfully");
        
        // Empty All Fields
        txtRestaurantName.setText("");
        txtNumOfTables.setText("");
        txtPhoneNumber.setText("");
        txtAddress.setText("");
        txtPassword.setText("");
        txtUsername.setText("");
        txtNumOfTables.setText("");
        checkboxDineInAvailable.setSelected(false);
        

    }//GEN-LAST:event_btnCreateActionPerformed

    private void checkboxDineInAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxDineInAvailableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkboxDineInAvailableActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JCheckBox checkboxDineInAvailable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel numOfTables;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtNumOfTables;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtRestaurantName;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
