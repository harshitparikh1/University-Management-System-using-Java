/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SupplierAdminWorkArea;

/**
 *
 * @author talre
 */


import Business.Chef.ChefDirectory;
import Business.Donation.DonationDirectory;
import Business.EcoSystem;
import Business.HeadChef.HeadChefDirectory;
import Business.Menu.MenuDirectory;
import Business.Restaurant.Restaurant;
import Business.Restaurant.RestaurantDirectory;
import Business.Supplier.SupplierDirectory;
import Business.Supplier.SupplierOrders;
import Business.UserAccount.UserAccount;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

public class SupplierAdminWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SupplierAdminWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private EcoSystem ecoSystem;
    
    public SupplierAdminWorkAreaJPanel(JPanel userProcessContainer) {
        
    }

    public SupplierAdminWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecoSystem, RestaurantDirectory restaurantDirectory, HeadChefDirectory headChefDirectory, ChefDirectory chefDirectory, MenuDirectory menuDirectory, DonationDirectory donationDirectory, SupplierDirectory supplierDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.ecoSystem = ecoSystem;
        
        populateTable();
        
       

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblSupplier = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblSupplier.setBackground(new java.awt.Color(204, 204, 204));
        tblSupplier.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Restaurant Name", "Item Name", "Quantity", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSupplier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSupplierMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSupplier);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 584, 170));

        jLabel2.setFont(new java.awt.Font("Optima", 1, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Manage Supplier Work Area");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 680, -1));

        jButton1.setText("Accept");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 300, -1, -1));

        jButton2.setText("Reject");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(324, 300, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void tblSupplierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSupplierMouseClicked
        // TODO add your handling code here:

        int selectedRowIndex = tblSupplier.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblSupplier.getModel();
        //        Menu selectedItem = (Menu)model.getValueAt(selectedRowIndex, 0);
    }//GEN-LAST:event_tblSupplierMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedRow = tblSupplier.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please Select a row from table first", "Warining", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        SupplierOrders supplierOrders = (SupplierOrders) tblSupplier.getValueAt(selectedRow, 0);
        if(supplierOrders.getStatus().equals("Accepted")){
            JOptionPane.showMessageDialog(null, "Supply order already accepted");
            return;
        }
        else{
            for(Restaurant restaurant : ecoSystem.getRestaurantDirectory().getRestaurantDirectory()){
                if(restaurant.getRestaurantName().equals(supplierOrders.getRestaurantName())){
                HashMap<String, Integer> restaurantInventory = restaurant.getInventory();
                Iterator<Map.Entry<String, Integer>> itrInventory = restaurantInventory.entrySet().iterator();
                restaurantInventory.put(supplierOrders.getItemName(), restaurantInventory.get(supplierOrders.getItemName())+supplierOrders.getItemQuantity());
                supplierOrders.setStatus("Accepted");
                }
            }
              
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblSupplier;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
    DefaultTableModel dtm = (DefaultTableModel) tblSupplier.getModel();
        dtm.setRowCount(0);
        
        for(SupplierOrders supplierOrders : ecoSystem.getSupplierOrderDirectory().getSupplierOrderDirectory()){
            if(supplierOrders.getSupplierName().equals(account.getEmployee().getName())){
                Object [] row = new Object[4];
                row[0] = supplierOrders;
                row[1] = supplierOrders.getItemName();
                row[2] = supplierOrders.getItemQuantity();
                row[3] = supplierOrders.getStatus();
                dtm.addRow(row);
            }
            
            
            
        }
    
    }
}
