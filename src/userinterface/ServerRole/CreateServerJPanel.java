/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ServerRole;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Restaurant.Restaurant;
import Business.Restaurant.RestaurantDirectory;
import Business.Role.CustomerRole;
import Business.Role.ServerRole;
import Business.Server.Server;
import Business.Server.ServerDirectory;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author talre
 */
public class CreateServerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateServerJPanel1
     */
    
    private JPanel userProcessContainer;
    private UserAccount account;
    private EcoSystem ecoSystem;
    private RestaurantDirectory restaurantDirectory;
    private Restaurant restaurant;
    private ServerDirectory serverDirectory;
    private static int count = 1;
    
    public CreateServerJPanel() {
        
    }

    public CreateServerJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecoSystem, RestaurantDirectory restaurantDirectory, ServerDirectory serverDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.ecoSystem = ecoSystem;
        this.serverDirectory = ecoSystem.getServerDirectory();
        this.restaurantDirectory = ecoSystem.getRestaurantDirectory();
        
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        createServerButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        serverUserName = new javax.swing.JTextField();
        serverPhoneNumber = new javax.swing.JTextField();
        serverFirstName = new javax.swing.JTextField();
        serverPassword = new javax.swing.JPasswordField();
        serverLastName = new javax.swing.JTextField();
        serverAge = new javax.swing.JTextField();
        serverEmailId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        serverHomeAddress = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        serverYearsOfExperience = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 0));
        setLayout(null);

        btnBack.setBackground(new java.awt.Color(153, 255, 153));
        btnBack.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnBack.setText("<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(70, 100, 90, 30);

        createServerButton.setBackground(new java.awt.Color(255, 204, 0));
        createServerButton.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        createServerButton.setText("Create Server");
        createServerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createServerButtonActionPerformed(evt);
            }
        });
        add(createServerButton);
        createServerButton.setBounds(270, 510, 240, 60);

        jLabel6.setFont(new java.awt.Font("Optima", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 204, 204));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Home Address*:");
        add(jLabel6);
        jLabel6.setBounds(200, 280, 128, 23);

        jLabel9.setFont(new java.awt.Font("Optima", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(204, 204, 204));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Password*:");
        add(jLabel9);
        jLabel9.setBounds(190, 400, 132, 23);

        jLabel7.setFont(new java.awt.Font("Optima", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 204, 204));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Phone Number*:");
        add(jLabel7);
        jLabel7.setBounds(190, 320, 132, 23);
        add(serverUserName);
        serverUserName.setBounds(350, 360, 165, 26);
        add(serverPhoneNumber);
        serverPhoneNumber.setBounds(350, 320, 165, 26);
        add(serverFirstName);
        serverFirstName.setBounds(350, 130, 165, 26);
        add(serverPassword);
        serverPassword.setBounds(350, 400, 165, 26);
        add(serverLastName);
        serverLastName.setBounds(350, 170, 165, 26);
        add(serverAge);
        serverAge.setBounds(350, 240, 165, 26);
        add(serverEmailId);
        serverEmailId.setBounds(350, 210, 165, 26);

        jLabel2.setFont(new java.awt.Font("Optima", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("First Name*:");
        add(jLabel2);
        jLabel2.setBounds(215, 130, 110, 23);
        add(serverHomeAddress);
        serverHomeAddress.setBounds(350, 280, 165, 26);

        jLabel3.setFont(new java.awt.Font("Optima", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Last Name*:");
        add(jLabel3);
        jLabel3.setBounds(205, 170, 120, 23);

        jLabel4.setFont(new java.awt.Font("Optima", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Email Address*:");
        add(jLabel4);
        jLabel4.setBounds(180, 210, 140, 23);

        jLabel5.setFont(new java.awt.Font("Optima", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 204, 204));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Age*:");
        add(jLabel5);
        jLabel5.setBounds(230, 240, 95, 23);

        jLabel8.setFont(new java.awt.Font("Optima", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 204, 204));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Username*:");
        add(jLabel8);
        jLabel8.setBounds(190, 360, 132, 23);

        jLabel10.setFont(new java.awt.Font("Optima", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 204, 204));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Years Of Experience:");
        add(jLabel10);
        jLabel10.setBounds(160, 430, 165, 23);
        add(serverYearsOfExperience);
        serverYearsOfExperience.setBounds(350, 430, 165, 26);

        jLabel1.setFont(new java.awt.Font("Optima", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Create Server");
        add(jLabel1);
        jLabel1.setBounds(0, 30, 710, 50);

        jLabel11.setBackground(new java.awt.Color(0, 0, 0));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Server.jpg"))); // NOI18N
        add(jLabel11);
        jLabel11.setBounds(520, -240, 590, 670);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void createServerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createServerButtonActionPerformed
        if(serverFirstName.getText().isEmpty() || serverLastName.getText().isEmpty() || serverEmailId.getText().isEmpty() || serverAge.getText().isEmpty() || serverHomeAddress.getText().isEmpty() || serverUserName.getText().isEmpty() || serverPassword.getText().isEmpty() || serverPhoneNumber.getText().isEmpty() || serverYearsOfExperience.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Fields cannot be left empty");
            return;
        }
        
        
        String firstName = serverFirstName.getText();
        String lastName = serverLastName.getText();
        
        boolean flag ; 
        
        flag = firstName.matches("^[a-zA-Z -']+$");
        
        if(flag == false) {
            JOptionPane.showMessageDialog(null, "Invalid First Name. Use only alphabets and (-') special characters");
            return;
        }
        
        flag = lastName.matches("^[a-zA-Z -']+$");
        
        if(!flag) {
            JOptionPane.showMessageDialog(null, "Invalid Last Name. Use only alphabets and (-') special characters");
            return;
        }
        
        String name = firstName + " " + lastName;
        
        String email = serverEmailId.getText();
        
        flag = email.matches("^[a-zA-Z0-9]+@[a-zA-Z]+.[a-zA-Z]+$");
        
        if(!flag) {
            JOptionPane.showMessageDialog(null, "Email Address must be in format: example@mail.com");
            return;
        }
        
        for(Server server : serverDirectory.getServerDirectory()) {
            if(server.getEmail().equals(email)) {
                JOptionPane.showMessageDialog(null, "Email Address already exists");
            }
        }
        
        String phoneNumber = serverPhoneNumber.getText();
        
        if(phoneNumber.length() != 10) {
            JOptionPane.showMessageDialog(null, "Phone Number must be of 10 digits");
            return;
        }
        flag = phoneNumber.matches("^[0-9]+$");
        if(!flag) {
            JOptionPane.showMessageDialog(null, "Phone Number must have 0-9 digits only");
            return;
        }
        for(Server server : serverDirectory.getServerDirectory()) {
            if(server.getPhoneNumber().equals(phoneNumber)) {
                JOptionPane.showMessageDialog(null, "Phone Number already exists");
            }
        }
        
        int age = 0;
        int experience = Integer.parseInt(serverYearsOfExperience.getText());
        
        
        try {
            
            age = Integer.parseInt(serverAge.getText());
            
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, "Age must have 0-9 integers only");
            return;
        }
        
        String homeAddress = serverHomeAddress.getText();
        String userName = serverUserName.getText();
        String password = serverPassword.getText();
        
        for(UserAccount account : ecoSystem.getUserAccountDirectory().getUserAccountList()) {
            if(account.getUsername().equals(userName)) {
                JOptionPane.showMessageDialog(null, "Username Already exists");
                return;
            }
        }
        
//        Customer customer = customerDirectory.newCustomer(name, email, phoneNumber, age, homeAddress, userName);
        
        String restaurantName = (account.getEmployee().getName());

        ecoSystem.getServerDirectory().addServer(count++, name, email, phoneNumber, age, homeAddress, userName, experience, restaurantName,true);
        
        Employee employee = ecoSystem.getEmployeeDirectory().createEmployee(name);
        UserAccount usserAccount = ecoSystem.getUserAccountDirectory().createUserAccount(userName, password, employee, new ServerRole());
        
        JOptionPane.showMessageDialog(null, "New Server added successfully");
        
        // Empty All Fields
        serverAge.setText("");
        serverFirstName.setText("");
        serverHomeAddress.setText("");
        serverLastName.setText("");
        serverPassword.setText("");
        serverPhoneNumber.setText("");
        serverUserName.setText("");
        serverEmailId.setText("");
        serverYearsOfExperience.setText("");
        
        
        
    }//GEN-LAST:event_createServerButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton createServerButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField serverAge;
    private javax.swing.JTextField serverEmailId;
    private javax.swing.JTextField serverFirstName;
    private javax.swing.JTextField serverHomeAddress;
    private javax.swing.JTextField serverLastName;
    private javax.swing.JPasswordField serverPassword;
    private javax.swing.JTextField serverPhoneNumber;
    private javax.swing.JTextField serverUserName;
    private javax.swing.JTextField serverYearsOfExperience;
    // End of variables declaration//GEN-END:variables
}
