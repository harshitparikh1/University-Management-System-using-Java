
package userinterface.RestaurantAdminRole;

import Business.EcoSystem;
import Business.Restaurant.Restaurant;
import Business.Restaurant.RestaurantDirectory;
import Business.RestaurantTable.Table;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Talre
 */
public class ModifyRestaurantInfoJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount account;
    private EcoSystem ecoSystem;
    private RestaurantDirectory restaurantDirectory;
    private Restaurant restaurant;
    /**
     * Creates new form ModifyRestaurantInfoJPanel
     */
    public ModifyRestaurantInfoJPanel(JPanel userProcessContainer,UserAccount account, EcoSystem ecoSystem, RestaurantDirectory restaurantDirectory, Restaurant restaurant) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.ecoSystem = ecoSystem;
        this.restaurant = restaurant;
        this.restaurantDirectory = ecoSystem.getRestaurantDirectory();
        txtRestaurantName.setText(restaurant.getRestaurantName());
        txtAddress.setText(restaurant.getAddress());
        txtPhoneNumber.setText(restaurant.getPhoneNumber());
        
        txtNumOfTables.setText(String.valueOf(restaurant.getNumberOfTables()));
        checkboxDineInAvailable.setSelected(restaurant.getIsDineInAvailable());
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPhoneNumber = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNumOfTables = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtRestaurantName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        checkboxDineInAvailable = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(txtPhoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(381, 382, 165, -1));

        btnCreate.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnCreate.setText("Submit");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        add(btnCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(313, 549, 163, 52));

        jLabel7.setFont(new java.awt.Font("Optima", 1, 13)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Phone Number*:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(241, 388, -1, -1));

        jLabel6.setFont(new java.awt.Font("Optima", 1, 13)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Number of tables");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(216, 316, 121, -1));
        add(txtNumOfTables, new org.netbeans.lib.awtextra.AbsoluteConstraints(381, 310, 165, -1));
        add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(381, 227, 165, -1));

        jLabel3.setFont(new java.awt.Font("Optima", 1, 13)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Address*:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(216, 233, 121, -1));

        jLabel2.setFont(new java.awt.Font("Optima", 1, 13)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Restaurant Name*:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(179, 144, 158, -1));
        add(txtRestaurantName, new org.netbeans.lib.awtextra.AbsoluteConstraints(381, 138, 165, -1));

        jLabel1.setFont(new java.awt.Font("Optima", 1, 36)); // NOI18N
        jLabel1.setText("Modify Restaurant");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(246, 56, -1, -1));

        btnBack.setBackground(new java.awt.Color(255, 255, 255));
        btnBack.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnBack.setText("<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 6, 112, 51));

        jLabel8.setFont(new java.awt.Font("Optima", 2, 13)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("*Mandatory Fields");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(207, 496, 130, -1));

        jLabel11.setFont(new java.awt.Font("Optima", 1, 13)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Is Dine-in Available?");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 453, -1, -1));
        add(checkboxDineInAvailable, new org.netbeans.lib.awtextra.AbsoluteConstraints(381, 446, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ModifyRestaurant.png"))); // NOI18N
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(645, 170, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        if(txtRestaurantName.getText().isEmpty() || txtNumOfTables.getText().isEmpty() ||
            txtPhoneNumber.getText().isEmpty() || txtAddress.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Fields cannot be left empty");
            return;
        }

        boolean flag ;

        String phoneNumber = txtPhoneNumber.getText();

        if(phoneNumber.length() != 10) {
            JOptionPane.showMessageDialog(null, "PhoneNumber must be of 10 digits");
            return;
        }
        flag = phoneNumber.matches("^[0-9]+$");
        if(!flag) {
            JOptionPane.showMessageDialog(null, "Phone Number must have digits only");
            return;
        }
        for(Restaurant res : restaurantDirectory.getRestaurantDirectory()) {
            if(res.getPhoneNumber().equals(phoneNumber) && this.restaurant != res) {
                JOptionPane.showMessageDialog(null, "Phone Number already exists");
                return;
            }
        }

        String address = txtAddress.getText();
        
        int numberOfTables = Integer.parseInt(txtNumOfTables.getText());
        boolean isDineInAvailable;
        
        if(checkboxDineInAvailable.isSelected()){
                isDineInAvailable = true;
            }
            else{
                isDineInAvailable = false;
            }



        restaurant.setRestaurantName(txtRestaurantName.getText());
        restaurant.setPhoneNumber(phoneNumber);
        restaurant.setAddress(address);
        restaurant.setNumberOfTables(numberOfTables);
        restaurant.setIsDineInAvailable(isDineInAvailable);
        
        for(Table table : ecoSystem.getRestaurantTableDirectory().getRestaurantTableDirectory()){
            if(table.getRestaurantName().equals(account.getEmployee().getName())){
                ecoSystem.getRestaurantTableDirectory().getRestaurantTableDirectory().remove(table);
            }
        }
        
        if(isDineInAvailable){  
            for(int i=0;i<numberOfTables;i++){
            String number = ""+(i+1);
            ecoSystem.getRestaurantTableDirectory().addTable(number, true, account.getEmployee().getName(), 4);
            }
        }
        
        JOptionPane.showMessageDialog(null, "Restaurant Updated");
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ManageRestaurantInfoJPanel mrjp = (ManageRestaurantInfoJPanel) component;
        mrjp.refreshTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JCheckBox checkboxDineInAvailable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtNumOfTables;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtRestaurantName;
    // End of variables declaration//GEN-END:variables
}
