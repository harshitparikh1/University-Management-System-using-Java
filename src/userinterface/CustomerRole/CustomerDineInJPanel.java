/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.CustomerDirectory;
import Business.DeliveryMan.DeliveryManDirectory;
import Business.EcoSystem;
import Business.HeadChef.HeadChef;
import Business.HeadChef.HeadChefDirectory;
import Business.Menu.MenuDirectory;
import Business.Order.OrderDirectory;
import Business.Restaurant.Restaurant;
import Business.Restaurant.RestaurantDirectory;
import Business.RestaurantTable.RestaurantTableDirectory;
import Business.RestaurantTable.Table;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author talre
 */
public class CustomerDineInJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerDineInJPanel
     */
    
    
    
    private JPanel userProcessContainer;
    private EcoSystem ecoSystem;
    private UserAccount account;
    private CustomerDirectory customerDirectory;
    private RestaurantDirectory restaurantDirectory;
    private DeliveryManDirectory deliveryManDirectory;
    private MenuDirectory menuDirectory;
    private OrderDirectory orderDirectory;
    private HeadChefDirectory headChefDirectory;
    private RestaurantTableDirectory restaurantTableDirectory;
    
    
    public CustomerDineInJPanel() {
        
    }

    CustomerDineInJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecoSystem, RestaurantDirectory restaurantDirectory, RestaurantTableDirectory restaurantTableDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.ecoSystem = ecoSystem;
        this.customerDirectory = ecoSystem.getCustomerDirectory();
        this.restaurantDirectory = ecoSystem.getRestaurantDirectory();
        this.deliveryManDirectory = ecoSystem.getDeliveryManDirectory();
        this.menuDirectory = ecoSystem.getMenuDirectory();
        this.orderDirectory = ecoSystem.getOrderDirectory();
        this.headChefDirectory = ecoSystem.getHeadChefDirectory();
        this.restaurantTableDirectory = ecoSystem.getRestaurantTableDirectory();
        customerName.setText(account.getEmployee().getName());
        populateRestaurantCombo();
    }
    
    
    public void populateRestaurantCombo() {
        boxRestaurant.removeAllItems();
        boxRestaurant.addItem("  ");
        for(Restaurant res : ecoSystem.getRestaurantDirectory().getRestaurantDirectory()) {
            //System.out.println("res" + res);
            boxRestaurant.addItem(res.getRestaurantName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        boxRestaurant = new javax.swing.JComboBox<>();
        showTablesButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        enterpriseLabel1 = new javax.swing.JLabel();
        customerName = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableOfTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(102, 102, 102));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        boxRestaurant.setFont(new java.awt.Font("Optima", 0, 14)); // NOI18N
        boxRestaurant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        boxRestaurant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxRestaurantActionPerformed(evt);
            }
        });
        add(boxRestaurant, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, 214, -1));

        showTablesButton.setText("Show Tables");
        showTablesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showTablesButtonActionPerformed(evt);
            }
        });
        add(showTablesButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 90, -1, -1));

        enterpriseLabel.setFont(new java.awt.Font("Optima", 0, 14)); // NOI18N
        enterpriseLabel.setForeground(new java.awt.Color(204, 204, 204));
        enterpriseLabel.setText("Select Resturant: ");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 154, 40));

        enterpriseLabel1.setFont(new java.awt.Font("Optima", 1, 18)); // NOI18N
        enterpriseLabel1.setForeground(new java.awt.Color(204, 204, 204));
        enterpriseLabel1.setText("Customer :");
        add(enterpriseLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 3, 127, 30));

        customerName.setFont(new java.awt.Font("Optima", 1, 18)); // NOI18N
        customerName.setForeground(new java.awt.Color(204, 204, 204));
        customerName.setText("<value>");
        add(customerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(144, 5, 158, 26));

        tableOfTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Table Number", "Available", "Capacity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableOfTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 127, 601, 170));

        jButton1.setText("Sit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 330, -1, -1));

        btnBack.setText("<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void boxRestaurantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxRestaurantActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxRestaurantActionPerformed

    private void showTablesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showTablesButtonActionPerformed
        // TODO add your handling code here:
        if(boxRestaurant.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Please select a restaurant");
            return;
        }
        populateTable();
    }//GEN-LAST:event_showTablesButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedTable = tableOfTable.getSelectedColumn();
        if(selectedTable < 0) {
            JOptionPane.showMessageDialog(null,"Please Select a row from table first", "Warining", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        
//        Customer customer = (Customer)tableOfTable.getValueAt(selectedRow, 0);
//        
        
         
    
    
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxRestaurant;
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel customerName;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel enterpriseLabel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton showTablesButton;
    private javax.swing.JTable tableOfTable;
    // End of variables declaration//GEN-END:variables

    public void populateTable() {
        String restaurantName = boxRestaurant.getSelectedItem().toString();
        
        DefaultTableModel dtm = (DefaultTableModel) tableOfTable.getModel();
        dtm.setRowCount(0);

        for(Table table: ecoSystem.getRestaurantTableDirectory().getRestaurantTableDirectory()){

            if(table.getRestaurantName().equals(restaurantName)){
                Object [] row = new Object[3];
                row[0] = table;
                row[1] = table.isIsAvailable();
                row[2] = table.getCapacity();
                dtm.addRow(row);
            }


            }

    }
}
