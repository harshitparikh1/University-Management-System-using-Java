/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.HeadChefRole;

import Business.Chef.Chef;
import Business.Chef.ChefDirectory;
import Business.Customer.Customer;
import Business.EcoSystem;
import Business.HeadChef.HeadChefDirectory;
import Business.Restaurant.RestaurantDirectory;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.ChefRole.CreateChefJPanel;
import userinterface.ChefRole.ModifyChefJPanel;
import userinterface.SystemAdminWorkArea.CreateCustomerJPanel;
import userinterface.SystemAdminWorkArea.ModifyCustomerJPanel;

/**
 *
 * @author Harshit
 */
public class ManageChefJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount account;
    private EcoSystem ecoSystem;
    private RestaurantDirectory restaurantDirectory;
    private HeadChefDirectory headChefDirectory;
    private ChefDirectory chefDirectory;
    
    /**
     * Creates new form hi
     */
    

    ManageChefJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecoSystem, RestaurantDirectory restaurantDirectory, HeadChefDirectory headChefDirectory, ChefDirectory chefDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecoSystem = ecoSystem;
        this.account = account;
        this.restaurantDirectory = ecoSystem.getRestaurantDirectory();
        this.headChefDirectory = ecoSystem.getHeadChefDirectory();
        this.chefDirectory = ecoSystem.getChefDirectory();
        
        }
    
    public void populateTable() {
        String restaurantName = account.getEmployee().getName();
        System.out.println("userinterface.restaurant name " + restaurantName);
        DefaultTableModel dtm = (DefaultTableModel) tblChef.getModel();
        dtm.setRowCount(0);
        for(Chef chef : ecoSystem.getChefDirectory().getChefDirectory()){
            System.out.println("userinterface.HeadChefRole.ManageChefJPanel.populateTable() name " + chef.getName());
            System.out.println("userinterface.HeadChefRole.ManageChefJPanel.populateTable()" + chef.getRestaurantName());
            if(chef.getRestaurantName().equals(restaurantName)){
                
                System.out.println("resname" + restaurantName);
                
                Object [] row = new Object[6];
                row[0] = chef;
                row[1] = chef.getName();
                row[2] = chef.getEmail();
                row[3] = chef.getHomeAddress();
                row[4] = chef.getPhoneNumber();
                row[5] = chef.getAge();
                dtm.addRow(row);
            }
        }
    }

    public void refreshTable() {
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblChef = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        createChef = new javax.swing.JButton();
        modifyChef = new javax.swing.JButton();
        deleteChef = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblChef.setBackground(new java.awt.Color(204, 204, 204));
        tblChef.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Username", "Name ", "Email Address", "Address", "Mobile Number", "Age"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblChef);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 640, 132));

        jLabel1.setFont(new java.awt.Font("Optima", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Chefs ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 630, 40));

        createChef.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        createChef.setText("Create Chef");
        createChef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createChefActionPerformed(evt);
            }
        });
        add(createChef, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 170, 50));

        modifyChef.setBackground(new java.awt.Color(255, 255, 255));
        modifyChef.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        modifyChef.setText("Modify Chef");
        modifyChef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyChefActionPerformed(evt);
            }
        });
        add(modifyChef, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 260, 150, 50));

        deleteChef.setBackground(new java.awt.Color(255, 255, 255));
        deleteChef.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        deleteChef.setText("Delete Chef");
        deleteChef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteChefActionPerformed(evt);
            }
        });
        add(deleteChef, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 260, 170, 50));

        btnBack.setText("<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 10, 120, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ChefIcon.png"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 80, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void createChefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createChefActionPerformed
        // TODO add your handling code here:
        CreateChefJPanel createChef = new CreateChefJPanel(userProcessContainer, ecoSystem, chefDirectory);
        userProcessContainer.add("CreateChefJPanel",createChef);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_createChefActionPerformed

    private void modifyChefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyChefActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblChef.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please Select a row from table first", "Warining", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Chef chef = (Chef)tblChef.getValueAt(selectedRow,0);
        ModifyChefJPanel modifyChef = new ModifyChefJPanel(userProcessContainer, ecoSystem, chefDirectory, chef);
        userProcessContainer.add("ModifyChefJPanel",modifyChef);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_modifyChefActionPerformed

    private void deleteChefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteChefActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblChef.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please Select a row from table first", "Warining", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Chef chef = (Chef) tblChef.getValueAt(selectedRow, 0);
        chefDirectory.removeChef(chef);
        populateTable();
        
    }//GEN-LAST:event_deleteChefActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBackActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton createChef;
    private javax.swing.JButton deleteChef;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modifyChef;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTable tblChef;
    // End of variables declaration//GEN-END:variables

    
}
